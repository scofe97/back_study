package {{.ApplicationPackage}}.controller;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import {{.ApplicationPackage}}.dto.request.{{.DomainUpperCase}}CreateRequest;
import {{.ApplicationPackage}}.dto.request.{{.DomainUpperCase}}SelectRequest;
import {{.ApplicationPackage}}.dto.request.{{.DomainUpperCase}}UpdateRequest;
import {{.DomainPackage}}.{{.DomainUpperCase}}CommandService;
import org.okestro.tps.core.dto.TpsResponse;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Slf4j
@RestController
@RequiredArgsConstructor
@RequestMapping("/{{.DomainLowerCase}}/v1")
@Tag(name = "{{.Description}} Command API", description = "{{.Table}}")
public class {{.DomainUpperCase}}CommandController {

    private final {{.DomainUpperCase}}CommandService {{.DomainLowerCase}}CommandService;

    @Operation(summary = "{{.Description}} 생성", description = "{{.Description}} 생성을 위한 API 입니다.")
    @PostMapping("/create")
    public TpsResponse<?> create{{.DomainUpperCase}}(@RequestHeader("userId") String userId,
                                                  @Valid @RequestBody {{.DomainUpperCase}}CreateRequest createRequest) {
        {{.DomainLowerCase}}CommandService.create{{.DomainUpperCase}}(createRequest, userId);
        return TpsResponse.success(null);
    }

    @Operation(summary = "{{.Description}} 수정", description = "{{.Description}} 수정을 위한 API 입니다.")
    @PostMapping("/update")
    public TpsResponse<?> update{{.DomainUpperCase}}(@RequestHeader("userId") String userId,
                                                  @Valid @RequestBody {{.DomainUpperCase}}UpdateRequest updateRequest) {
        {{.DomainLowerCase}}CommandService.update{{.DomainUpperCase}}(updateRequest, userId);
        return TpsResponse.success(null);
    }

    @Operation(summary = "{{.Description}} 제거", description = "{{.Description}} 삭제를 위한 API 입니다.")
    @PostMapping("/delete")
    public TpsResponse<?> delete{{.DomainUpperCase}}(@RequestBody List<{{.DomainUpperCase}}SelectRequest> deleteRequests) {
        {{.DomainLowerCase}}CommandService.delete{{.DomainUpperCase}}(deleteRequests);
        return TpsResponse.success(null);
    }
}
