package {{.ApplicationPackage}}.controller;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import {{.ApplicationPackage}}.dto.request.{{.DomainUpperCase}}Request;
import {{.ApplicationPackage}}.dto.response.{{.DomainUpperCase}}Response;
import {{.DomainPackage}}.{{.DomainUpperCase}}QueryService;
import org.okestro.tps.common_lib.message.TpsResponse;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@Slf4j
@RestController
@RequiredArgsConstructor
@RequestMapping("/{{.DomainLowerCase}}/v1")
@Tag(name = "{{.Description}} Query API", description = "{{.Table}}")
public class {{.DomainUpperCase}}QueryController {
    private final {{.DomainUpperCase}}QueryService queryService;

    @Operation(summary = "{{.Description}} 리스트 조회", description = "{{.Description}}의 전체 데이터를 가져오는 API입니다.")
    @GetMapping("/select")
    public TpsResponse<?> select{{.DomainUpperCase}}List() {
        List<{{.DomainUpperCase}}Response> responseList = queryService.select{{.DomainUpperCase}}List();
        return TpsResponse.success(responseList);
    }


    @Operation(summary = "{{.Description}} 단건 조회", description = "{{.Description}}의 특정 데이터를 가져오는 API입니다.")
    @GetMapping("/select/{id}")
    public TpsResponse<?> select{{.DomainUpperCase}}(@PathVariable String id) {
        {{.DomainUpperCase}}SelectRequest selectRequest = {{.DomainUpperCase}}SelectRequest.builder()
            .build();
        {{.DomainUpperCase}}Response response = queryService.select{{.DomainUpperCase}}(selectRequest);
        return TpsResponse.success(response);
    }
}
