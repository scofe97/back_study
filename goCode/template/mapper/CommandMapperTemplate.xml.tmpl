<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="{{.InfrastructurePackage}}.mapper.{{.ModelUpperCase}}CommandMapper">

    <!-- {{.ModelUpperCase}} 생성 -->
    <insert id="create{{.DomainUpperCase}}"
            parameterType="{{.InfrastructurePackage}}.model.{{.ModelUpperCase}}">
        INSERT INTO {{.Table}} (
                /*{{.InfrastructurePackage}}.repository.{{.ModelUpperCase}}CommandMapper.create{{.DomainUpperCase}}*/
            {{- range $index, $element := .Columns }}
              {{- if .IsDefault }}
              {{- else }}
              {{ if $index }}, {{ else }}  {{ end }}{{- .Name}}
              {{- end }}
            {{- end }}
        ) VALUES (
            {{- range $index, $element := .Columns }}
                {{- if .IsDefault }}
                {{- else }}
              {{ if $index }}, {{ else }}  {{ end }}#{{printf "{%s}" .LowerCaseName}}
                {{- end }}
            {{- end }}
        )
    </insert>

    <!-- {{.ModelUpperCase}} 수정 -->
    <update id="update{{.DomainUpperCase}}"
            parameterType="{{.InfrastructurePackage}}.model.{{.ModelUpperCase}}">
        UPDATE {{.Table}}
               /*{{.InfrastructurePackage}}.repository.{{.ModelUpperCase}}CommandMapper.update{{.DomainUpperCase}}*/
           SET
   {{- range $index, $element := .Columns }}
       {{- if (or ($element.IsPrimaryKey) (eq .Name "REG_DT") (eq .Name "RGTR_ID")) }}
       {{- else }}
             {{ if ne $index  (firstNonPrimaryKeyIndex $.Columns)}}, {{ else }}  {{ end }}{{.Name}} = #{{printf "{%s}" .LowerCaseName}}

       {{- end }}
   {{- end }}
         WHERE
       {{- range $index, $element := .Columns }}
           {{- if $element.IsPrimaryKey }}
           {{ if ne $index  (firstPrimaryKeyIndex $.Columns)}}AND {{ else }}    {{ end }}{{.Name}} = #{{printf "{%s}" .LowerCaseName}}
           {{- end }}
       {{- end }}
    </update>

    <!-- {{.ModelUpperCase}} 다중 삭제 -->
    <delete id="delete{{.DomainUpperCase}}"
            parameterType="{{.InfrastructurePackage}}.model.{{.ModelUpperCase}}">
        DELETE /*{{.InfrastructurePackage}}.repository.{{.ModelUpperCase}}CommandMapper.delete{{.DomainUpperCase}}*/
          FROM {{.Table}}
         WHERE (

       {{- range $index, $element := .Columns }}
           {{- if $element.IsPrimaryKey }}
               {{- if ne $index (lastPrimaryKeyIndex $.Columns) }}
               {{- .Name }},
               {{- else }}
               {{- .Name }}
               {{- end }}
           {{- end }}
       {{- end }}) IN (
               <foreach collection="list" index="index" item="item" separator=",">
               (
               {{- range $index, $element := .Columns }}
                  {{- if $element.IsPrimaryKey }}
                  {{- if ne $index (lastPrimaryKeyIndex $.Columns) }}
                  #{{- printf "{item.%s}" .LowerCaseName -}},
                  {{- else }}
                  #{{- printf "{item.%s}" .LowerCaseName -}}
                  {{- end }}
                  {{- end }}
               {{- end }}
               )
               </foreach>
               )
    </delete>
</mapper>
